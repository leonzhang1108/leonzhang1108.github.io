{"version":3,"sources":["webpack:///./src/pages/PieChart/index.tsx"],"names":["props","resize","myChart","setTimeout","state","loaded","componentDidMount","this","getOption","componentWillReceiveProps","componentWillUpdate","res","setState","init","echarts","setOption","render","className","ref","dom","Component","connect","component","PieChart","mapStateToProps","contentHeight","common","contentWidth"],"mappings":"+zDAcA,cAIE,WAAYA,GAAZ,MACE,YAAMA,IAAM,K,OAgBd,EAAAC,OAAS,WACH,EAAKC,SACPC,WAAW,EAAKD,QAAQD,OAAQ,IAjBlC,EAAKG,MAAQ,CAAEC,QAAQ,G,EAwC3B,OA9CuB,OASrB,YAAAC,kBAAA,WACEC,KAAKC,aAGP,YAAAC,0BAAA,WACEF,KAAKN,UAGP,YAAAS,oBAAA,WACEH,KAAKN,UASD,YAAAO,UAAN,W,gGACc,SAAM,EAAQ,M,cAApBG,EAAM,SACZJ,KAAKK,SAAS,CAAEP,QAAQ,IACxBE,KAAKL,QAAU,IAAQW,KAAKN,KAAKO,SACjCP,KAAKL,QAAQa,UAAUJ,GACvBJ,KAAKN,S,YAGP,YAAAe,OAAA,sBACE,OACE,yBAAKC,UAAU,qBACZV,KAAKH,MAAMC,OACV,yBAAKa,IAAK,SAAAC,GAAO,OAAC,EAAKL,QAAUK,GAAMF,UAAU,YAEjD,yBAAKA,UAAU,aAKzB,EA9CA,CAAuB,IAAMG,WAgDd,cAAMC,QAAQ,CAC3BC,UAAWC,EACXC,gBAAiB,SAAApB,GAAS,OACxBqB,cAAerB,EAAMsB,OAAOD,cAC5BE,aAAcvB,EAAMsB,OAAOC","file":"js/26.8c231a92241fb09fedc6.bundle.js","sourcesContent":["import Utils from '@utils'\nimport Echarts from '@cpt/echarts'\nimport React from 'react'\nimport './index.less'\n\ninterface IProps {\n  contentHeight: number;\n  contentWidth: number;\n}\n\ninterface IState {\n  loaded: boolean;\n}\n\nclass PieChart extends React.Component<IProps, IState> {\n  echarts: HTMLDivElement | null\n  myChart: any\n\n  constructor(props) {\n    super(props)\n    this.state = { loaded: false }\n  }\n\n  componentDidMount() {\n    this.getOption()\n  }\n\n  componentWillReceiveProps() {\n    this.resize()\n  }\n\n  componentWillUpdate() {\n    this.resize()\n  }\n\n  resize = () => {\n    if (this.myChart) {\n      setTimeout(this.myChart.resize, 0)\n    }\n  }\n\n  async getOption() {\n    const res = await require('./echarts.json')\n    this.setState({ loaded: true })\n    this.myChart = Echarts.init(this.echarts)\n    this.myChart.setOption(res)\n    this.resize()\n  }\n\n  render() {\n    return (\n      <div className=\"pie-chart-wrapper\">\n        {this.state.loaded ? (\n          <div ref={dom => (this.echarts = dom)} className=\"echarts\" />\n        ) : (\n          <div className=\"loader\" />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Utils.connect({\n  component: PieChart,\n  mapStateToProps: state => ({\n    contentHeight: state.common.contentHeight,\n    contentWidth: state.common.contentWidth\n  })\n})\n"],"sourceRoot":""}