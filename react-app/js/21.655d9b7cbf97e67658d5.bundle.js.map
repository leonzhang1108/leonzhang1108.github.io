{"version":3,"sources":["webpack:///./src/pages/Gobang/index.tsx"],"names":["props","reset","e","size","isMobile","state","renju","showNumber","step","positions","checkerboard","calculateCheckerboard","setState","result","i","row","j","push","index","mouseEnter","rowIndex","itemIndex","setCheckerboard","mouseLeave","itemClick","isClick","p","concat","column","isWin","isPeace","info","title","content","isColumnWin","isRowWin","isSkewWin","isDownLineWin","isUpLineWin","toggleShowNumber","retract","pop","renderItem","item","className","key","onClick","handle","onMouseEnter","onMouseLeave","renderRow","map","render","this","type","disabled","length","Component","connect","component","Gobang","mapStateToProps","common"],"mappings":"4uBAkBA,cACE,WAAYA,GAAZ,MACE,YAAMA,IAAM,K,OAId,EAAAC,MAAQ,SAACC,GACP,IAAMC,EAAQ,EAAKH,MAAMI,SAAgB,EAAL,GAE9BC,EAAQ,CACZF,KAAI,EACJG,MAHa,EAAKN,MAAMI,SAAe,EAAJ,EAInCG,YAAY,EACZC,KAAM,EACNC,UAAW,GACXC,aAAc,EAAKC,sBAAsBR,IAEvCD,EACF,EAAKU,SAASP,GAEd,EAAKA,MAAQ,EAAH,GAAQA,IAMtB,EAAAM,sBAAwB,SAAAR,GAEtB,IADA,IAAMU,EAAkB,GACfC,EAAI,EAAGA,EAAIX,EAAMW,IAAK,CAE7B,IADA,IAAMC,EAAa,GACVC,EAAI,EAAGA,EAAIb,EAAMa,IACxBD,EAAIE,KAAK,CAAEZ,MAAO,EAAGa,OAAQ,IAE/BL,EAAOI,KAAKF,GAEd,OAAOF,GAGT,EAAAM,WAAa,SAAC,G,IAAEC,EAAQ,WAAEC,EAAS,YACjC,EAAKC,gBAAgB,CAAEjB,MAAO,EAAGe,SAAQ,EAAEC,UAAS,KAGtD,EAAAE,WAAa,SAAC,G,IAAEH,EAAQ,WAAEC,EAAS,YACjC,EAAKC,gBAAgB,CAAEjB,MAAO,EAAGe,SAAQ,EAAEC,UAAS,KAGtD,EAAAG,UAAY,SAAC,G,IAAEJ,EAAQ,WAAEC,EAAS,YACxBb,EAAS,EAAKH,MAAK,KAC3B,EAAKiB,gBACH,CAAEjB,MAAOG,EAAO,GAAM,EAAI,EAAI,EAAGY,SAAQ,EAAEC,UAAS,IACpD,IAIJ,EAAAC,gBAAkB,SAAC,EAAgCG,G,IAA9BpB,EAAK,QAAEe,EAAQ,WAAEC,EAAS,YACvC,EAAuC,EAAKhB,MAA1CK,EAAY,eAAEF,EAAI,OAAakB,EAAC,YAEM,IAA5ChB,EAAaU,GAAUC,GAAWhB,OACU,IAA5CK,EAAaU,GAAUC,GAAWhB,QAElCK,EAAaU,GAAUC,GAAa,CAAEhB,MAAK,EAAEa,MAAOO,EAAUjB,GAAQ,GACtE,EAAKI,SACH,CACEF,aAAY,EACZF,KAAMiB,EAAUjB,EAAO,EAAIA,EAC3BC,UAAWgB,EACPC,EAAEC,OAAO,CAAEZ,IAAKK,EAAUQ,OAAQP,IAClCK,IAEN,WACE,OAAAD,IACC,EAAKI,MAAM,CAAET,SAAQ,EAAEC,UAAS,EAAEhB,MAAK,KACxC,EAAKyB,eAKb,EAAAA,QAAU,WACF,MAAiB,EAAKzB,MAApBF,EAAI,OACRA,EAAOA,IADO,QAEhB,IAAM4B,KAAK,CACTC,MAAO,QACPC,QAAS,UAKf,EAAAJ,MAAQ,SAAC,G,IAAET,EAAQ,WAAEC,EAAS,YAAEhB,EAAK,QAC7BwB,EACJ,EAAKK,YAAY,CAAEd,SAAQ,EAAEC,UAAS,EAAEhB,MAAK,KAC7C,EAAK8B,SAAS,CAAEf,SAAQ,EAAEC,UAAS,EAAEhB,MAAK,KAC1C,EAAK+B,UAAU,CAAEhB,SAAQ,EAAEC,UAAS,EAAEhB,MAAK,IAQ7C,OANIwB,GACF,IAAME,KAAK,CACTC,MAAO,UACPC,SAAsB,IAAV5B,EAAc,QAAU,SAAO,UAGxCwB,GAGT,EAAAK,YAAc,SAAC,GAGb,I,IAHed,EAAQ,WAAEC,EAAS,YAAEhB,EAAK,QACnC,EAAgC,EAAKA,MAAnCF,EAAI,OAAEO,EAAY,eAAEJ,EAAK,QAC7BO,EAAS,EACJC,IAAMR,EAAQ,GAAIQ,GAAKR,EAAQ,IAEpCc,EAAWN,GAAK,GAChBM,EAAWN,EAAIX,GACfO,EAAaU,EAAWN,GAAGO,GAAWhB,QAAUA,EAEhDQ,IAEAA,EAAS,EAEPA,IAAWP,GAV0BQ,KAc3C,OAAOD,IAAWP,GAGpB,EAAA6B,SAAW,SAAC,GAGV,I,IAHYf,EAAQ,WAAEC,EAAS,YAAEhB,EAAK,QAChC,EAAgC,EAAKA,MAAnCF,EAAI,OAAEO,EAAY,eAAEJ,EAAK,QAC7BO,EAAS,EACJC,IAAMR,EAAQ,GAAIQ,GAAKR,EAAQ,IAEpCe,EAAYP,GAAK,GACjBO,EAAYP,EAAIX,GAChBO,EAAaU,GAAUC,EAAYP,GAAGT,QAAUA,EAEhDQ,IAEAA,EAAS,EAEPA,IAAWP,GAV0BQ,KAc3C,OAAOD,IAAWP,GAGpB,EAAA8B,UAAY,SAAC,G,IAAEhB,EAAQ,WAAEC,EAAS,YAAEhB,EAAK,QACvC,SAAKgC,cAAc,CAAEjB,SAAQ,EAAEC,UAAS,EAAEhB,MAAK,KAC/C,EAAKiC,YAAY,CAAElB,SAAQ,EAAEC,UAAS,EAAEhB,MAAK,KAE/C,EAAAgC,cAAgB,SAAC,GAGf,I,IAHiBjB,EAAQ,WAAEC,EAAS,YAAEhB,EAAK,QACrC,EAAgC,EAAKA,MAAnCF,EAAI,OAAEO,EAAY,eAAEJ,EAAK,QAC7BO,EAAS,EACJC,IAAMR,EAAQ,GAAIQ,GAAKR,EAAQ,IAEpCe,EAAYP,GAAK,GACjBO,EAAYP,EAAIX,GAChBiB,EAAWN,GAAK,GAChBM,EAAWN,EAAIX,GACfO,EAAaU,EAAWN,GAAGO,EAAYP,GAAGT,QAAUA,EAEpDQ,IAEAA,EAAS,EAEPA,IAAWP,GAZ0BQ,KAgB3C,OAAOD,IAAWP,GAGpB,EAAAgC,YAAc,SAAC,GAGb,I,IAHelB,EAAQ,WAAEC,EAAS,YAAEhB,EAAK,QACnC,EAAgC,EAAKA,MAAnCF,EAAI,OAAEO,EAAY,eAAEJ,EAAK,QAC7BO,EAAS,EACJC,IAAMR,EAAQ,GAAIQ,GAAKR,EAAQ,IAEpCe,EAAYP,GAAK,GACjBO,EAAYP,EAAIX,GAChBiB,EAAWN,GAAK,GAChBM,EAAWN,EAAIX,GACfO,EAAaU,EAAWN,GAAGO,EAAYP,GAAGT,QAAUA,EAEpDQ,IAEAA,EAAS,EAEPA,IAAWP,GAZ0BQ,KAgB3C,OAAOD,IAAWP,GAGpB,EAAAiC,iBAAmB,WACjB,EAAK3B,SAAS,CAAEL,YAAa,EAAKF,MAAME,cAG1C,EAAAiC,QAAU,WACF,MAAoC,EAAKnC,MAAvCG,EAAI,OAAEC,EAAS,YAAEC,EAAY,eAC/B,EAAkBD,EAAUgC,MAA1B1B,EAAG,MAAEa,EAAM,SACnBlB,EAAaK,GAAKa,GAAU,CAAEvB,MAAO,EAAGa,OAAQ,GAChD,EAAKN,SAAS,CACZJ,KAAMA,EAAO,EACbC,UAAS,EACTC,aAAY,KAIhB,EAAAgC,WAAa,SAACC,EAAMvB,EAAUC,GACpB,IAAAhB,EAAiBsC,EAAI,MAAdzB,EAAUyB,EAAI,MACvB,EAAuB,EAAKtC,MAA1BG,EAAI,OAAED,EAAU,aACpBqC,EAAY,GAChB,OAAQvC,GACN,KAAK,EACHuC,EAAYpC,EAAO,GAAM,EAAI,eAAiB,eAC9C,MACF,KAAK,EACHoC,EAAY,wBACZ,MACF,KAAK,EACHA,EAAY,wBAGhB,OACE,yBACEA,UAAU,OACVC,IAAKxB,EACLyB,QAAS,IAAMC,OAAO,EAAKvB,UAAW,CAAEJ,SAAQ,EAAEC,UAAS,IAC3D2B,aAAc,IAAMD,OAAO,EAAK5B,WAAY,CAAEC,SAAQ,EAAEC,UAAS,IACjE4B,aAAc,IAAMF,OAAO,EAAKxB,WAAY,CAAEH,SAAQ,EAAEC,UAAS,KAEjE,yBAAKuB,UAAWA,GACbrC,GAAcW,GAAS,EAAIA,EAAQ,EAAI,MAMhD,EAAAgC,UAAY,SAACnC,EAAKK,GAAa,OAC7B,yBAAKwB,UAAU,MAAMC,IAAKzB,GACvBL,EAAIoC,KAAI,SAACR,EAAMtB,GAAc,SAAKqB,WAAWC,EAAMvB,EAAUC,QA1OhE,EAAKpB,Q,EAyQT,OA5QqB,OAiPnB,YAAAmD,OAAA,WACQ,MAA0CC,KAAKhD,MAA7CK,EAAY,eAAEH,EAAU,aAAEE,EAAS,YAC3C,OACE,yBAAKmC,UAAU,kBACb,yBAAKA,UAAU,iBAAiBlC,EAAayC,IAAIE,KAAKH,YACtD,yBAAKN,UAAU,kBACb,kBAAC,IAAM,CACLU,KAAK,UACLC,SAA+B,IAArB9C,EAAU+C,OACpBV,QAASO,KAAKpD,OAAK,SAIrB,kBAAC,IAAM,CAACqD,KAAK,UAAUR,QAASO,KAAKd,kBAClChC,EAAa,aAAe,cAE/B,kBAAC,IAAM,CACL+C,KAAK,UACLC,SAA+B,IAArB9C,EAAU+C,OACpBV,QAASO,KAAKb,SAAO,cAQjC,EA5QA,CAAqB,IAAMiB,WA8QZ,cAAMC,QAAQ,CAC3BC,UAAWC,EACXC,gBAAiB,SAAAxD,GAAS,OACxBD,SAAUC,EAAMyD,OAAO1D","file":"js/21.655d9b7cbf97e67658d5.bundle.js","sourcesContent":["import Utils from '@utils'\nimport { Button, Modal } from 'antd'\nimport React from 'react'\nimport './index.less'\n\ninterface IProps {\n  isMobile: boolean;\n}\n\ninterface IState {\n  size: number;\n  showNumber: boolean;\n  checkerboard: any[][];\n  step: number;\n  positions: any[];\n  renju: number;\n}\n\nclass Gobang extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props)\n    this.reset()\n  }\n\n  reset = (e?) => {\n    const size = !this.props.isMobile ? 15 : 3\n    const renju = !this.props.isMobile ? 5 : 3\n    const state = {\n      size,\n      renju,\n      showNumber: false,\n      step: 0,\n      positions: [],\n      checkerboard: this.calculateCheckerboard(size)\n    }\n    if (e) {\n      this.setState(state)\n    } else {\n      this.state = { ...state }\n    }\n  }\n\n  // state\n  // 0: nothing, 1: hover, 2: black, 3: white\n  calculateCheckerboard = size => {\n    const result: any[][] = []\n    for (let i = 0; i < size; i++) {\n      const row: any[] = []\n      for (let j = 0; j < size; j++) {\n        row.push({ state: 0, index: -1 })\n      }\n      result.push(row)\n    }\n    return result\n  }\n\n  mouseEnter = ({ rowIndex, itemIndex }) => {\n    this.setCheckerboard({ state: 1, rowIndex, itemIndex })\n  }\n\n  mouseLeave = ({ rowIndex, itemIndex }) => {\n    this.setCheckerboard({ state: 0, rowIndex, itemIndex })\n  }\n\n  itemClick = ({ rowIndex, itemIndex }) => {\n    const { step } = this.state\n    this.setCheckerboard(\n      { state: step % 2 === 1 ? 3 : 2, rowIndex, itemIndex },\n      true\n    )\n  }\n\n  setCheckerboard = ({ state, rowIndex, itemIndex }, isClick?) => {\n    const { checkerboard, step, positions: p } = this.state\n    if (\n      checkerboard[rowIndex][itemIndex].state !== 2 &&\n      checkerboard[rowIndex][itemIndex].state !== 3\n    ) {\n      checkerboard[rowIndex][itemIndex] = { state, index: isClick ? step : -1 }\n      this.setState(\n        {\n          checkerboard,\n          step: isClick ? step + 1 : step,\n          positions: isClick\n            ? p.concat({ row: rowIndex, column: itemIndex })\n            : p\n        },\n        () =>\n          isClick &&\n          !this.isWin({ rowIndex, itemIndex, state }) &&\n          this.isPeace()\n      )\n    }\n  }\n\n  isPeace = () => {\n    const { size, step } = this.state\n    if (size * size === step) {\n      Modal.info({\n        title: 'Peace',\n        content: 'Draw'\n      })\n    }\n  }\n\n  isWin = ({ rowIndex, itemIndex, state }) => {\n    const isWin =\n      this.isColumnWin({ rowIndex, itemIndex, state }) ||\n      this.isRowWin({ rowIndex, itemIndex, state }) ||\n      this.isSkewWin({ rowIndex, itemIndex, state })\n\n    if (isWin) {\n      Modal.info({\n        title: 'Victory',\n        content: `${state === 2 ? 'black' : 'white'} wins`\n      })\n    }\n    return isWin\n  }\n\n  isColumnWin = ({ rowIndex, itemIndex, state }) => {\n    const { size, checkerboard, renju } = this.state\n    let result = 0\n    for (let i = -(renju - 1); i <= renju - 1; i++) {\n      if (\n        rowIndex + i >= 0 &&\n        rowIndex + i < size &&\n        checkerboard[rowIndex + i][itemIndex].state === state\n      ) {\n        result++\n      } else {\n        result = 0\n      }\n      if (result === renju) {\n        break\n      }\n    }\n    return result === renju\n  }\n\n  isRowWin = ({ rowIndex, itemIndex, state }) => {\n    const { size, checkerboard, renju } = this.state\n    let result = 0\n    for (let i = -(renju - 1); i <= renju - 1; i++) {\n      if (\n        itemIndex + i >= 0 &&\n        itemIndex + i < size &&\n        checkerboard[rowIndex][itemIndex + i].state === state\n      ) {\n        result++\n      } else {\n        result = 0\n      }\n      if (result === renju) {\n        break\n      }\n    }\n    return result === renju\n  }\n\n  isSkewWin = ({ rowIndex, itemIndex, state }) =>\n    this.isDownLineWin({ rowIndex, itemIndex, state }) ||\n    this.isUpLineWin({ rowIndex, itemIndex, state })\n\n  isDownLineWin = ({ rowIndex, itemIndex, state }) => {\n    const { size, checkerboard, renju } = this.state\n    let result = 0\n    for (let i = -(renju - 1); i <= renju - 1; i++) {\n      if (\n        itemIndex + i >= 0 &&\n        itemIndex + i < size &&\n        rowIndex + i >= 0 &&\n        rowIndex + i < size &&\n        checkerboard[rowIndex + i][itemIndex + i].state === state\n      ) {\n        result++\n      } else {\n        result = 0\n      }\n      if (result === renju) {\n        break\n      }\n    }\n    return result === renju\n  }\n\n  isUpLineWin = ({ rowIndex, itemIndex, state }) => {\n    const { size, checkerboard, renju } = this.state\n    let result = 0\n    for (let i = -(renju - 1); i <= renju - 1; i++) {\n      if (\n        itemIndex + i >= 0 &&\n        itemIndex + i < size &&\n        rowIndex - i >= 0 &&\n        rowIndex - i < size &&\n        checkerboard[rowIndex - i][itemIndex + i].state === state\n      ) {\n        result++\n      } else {\n        result = 0\n      }\n      if (result === renju) {\n        break\n      }\n    }\n    return result === renju\n  }\n\n  toggleShowNumber = () => {\n    this.setState({ showNumber: !this.state.showNumber })\n  }\n\n  retract = () => {\n    const { step, positions, checkerboard } = this.state\n    const { row, column } = positions.pop()\n    checkerboard[row][column] = { state: 0, index: -1 }\n    this.setState({\n      step: step - 1,\n      positions,\n      checkerboard\n    })\n  }\n\n  renderItem = (item, rowIndex, itemIndex) => {\n    const { state, index } = item\n    const { step, showNumber } = this.state\n    let className = ''\n    switch (state) {\n      case 1:\n        className = step % 2 !== 1 ? 'chosen black' : 'chosen white'\n        break\n      case 2:\n        className = 'chosen black selected'\n        break\n      case 3:\n        className = 'chosen white selected'\n        break\n    }\n    return (\n      <div\n        className=\"item\"\n        key={itemIndex}\n        onClick={Utils.handle(this.itemClick, { rowIndex, itemIndex })}\n        onMouseEnter={Utils.handle(this.mouseEnter, { rowIndex, itemIndex })}\n        onMouseLeave={Utils.handle(this.mouseLeave, { rowIndex, itemIndex })}\n      >\n        <div className={className}>\n          {showNumber && index >= 0 ? index + 1 : ''}\n        </div>\n      </div>\n    )\n  }\n\n  renderRow = (row, rowIndex) => (\n    <div className=\"row\" key={rowIndex}>\n      {row.map((item, itemIndex) => this.renderItem(item, rowIndex, itemIndex))}\n    </div>\n  )\n\n  render() {\n    const { checkerboard, showNumber, positions } = this.state\n    return (\n      <div className=\"gobang-wrapper\">\n        <div className=\"table-wrapper\">{checkerboard.map(this.renderRow)}</div>\n        <div className=\"button-wrapper\">\n          <Button\n            type=\"primary\"\n            disabled={positions.length === 0}\n            onClick={this.reset}\n          >\n            Reset\n          </Button>\n          <Button type=\"primary\" onClick={this.toggleShowNumber}>\n            {showNumber ? 'Hide steps' : 'Show steps'}\n          </Button>\n          <Button\n            type=\"primary\"\n            disabled={positions.length === 0}\n            onClick={this.retract}\n          >\n            Retract\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Utils.connect({\n  component: Gobang,\n  mapStateToProps: state => ({\n    isMobile: state.common.isMobile\n  })\n})\n"],"sourceRoot":""}