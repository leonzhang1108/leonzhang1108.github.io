{"version":3,"sources":["webpack:///./node_modules/@ant-design/icons/DownloadOutlined.js","webpack:///./node_modules/@ant-design/icons/RedoOutlined.js","webpack:///./src/constant/icons.ts","webpack:///./node_modules/@ant-design/icons/lib/icons/DownloadOutlined.js","webpack:///./node_modules/@ant-design/icons-svg/lib/asn/DownloadOutlined.js","webpack:///./node_modules/@ant-design/icons/lib/icons/RedoOutlined.js","webpack:///./node_modules/@ant-design/icons-svg/lib/asn/RedoOutlined.js","webpack:///./node_modules/dom-to-image/src/dom-to-image.js","webpack:///./src/pages/MondrianArt/index.tsx"],"names":["obj","Object","defineProperty","exports","value","default","_default","__esModule","module","_interopRequireDefault","_interopRequireWildcard","React","_DownloadOutlined","_AntdIcon","DownloadOutlined","props","ref","createElement","assign","icon","displayName","forwardRef","_RedoOutlined","RedoOutlined","global","util","escape","string","replace","parseExtension","mimeType","url","extension","toLowerCase","WOFF","dataAsUrl","content","type","isDataUrl","search","canvasToBlob","canvas","toBlob","Promise","resolve","binaryString","window","atob","toDataURL","split","length","binaryArray","Uint8Array","i","charCodeAt","Blob","resolveUrl","baseUrl","doc","document","implementation","createHTMLDocument","base","head","appendChild","a","body","href","getAndEncode","domtoimage","impl","options","cacheBust","test","Date","getTime","placeholder","request","XMLHttpRequest","onreadystatechange","readyState","status","fail","encoder","FileReader","onloadend","result","readAsDataURL","response","ontimeout","responseType","timeout","open","send","imagePlaceholder","message","console","error","uid","index","Math","random","pow","toString","slice","delay","ms","arg","setTimeout","asArray","arrayLike","array","push","escapeXhtml","makeImage","uri","reject","image","Image","onload","onerror","src","width","node","leftBorder","px","rightBorder","scrollWidth","height","topBorder","bottomBorder","scrollHeight","match","exec","styleProperty","getComputedStyle","getPropertyValue","parseFloat","newUtil","inliner","URL_REGEX","inlineAll","get","shouldProcess","nothingToInline","then","readUrls","urls","done","forEach","inline","filter","data","dataUrl","RegExp","urlAsRegex","newInliner","fontFaces","resolveAll","readAll","webFonts","all","map","webFont","cssStrings","join","styleSheets","cssRules","sheet","bind","e","log","rule","CSSRule","FONT_FACE_RULE","style","rules","newWebFont","webFontRule","parentStyleSheet","cssText","newFontFaces","images","Element","background","inlined","setProperty","getPropertyPriority","inlineBackground","HTMLImageElement","newImage","childNodes","child","element","newImages","defaultOptions","undefined","toSvg","toPng","draw","toJpeg","quality","toPixelData","getContext","getImageData","copyOptions","cloneNode","root","HTMLCanvasElement","clone","cloneChildren","original","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","source","target","name","copyProperties","className","styleElement","selector","formatCssText","formatCssProperties","createTextNode","formatPseudoElementStyle","clonePseudoElement","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","SVGElement","SVGRectElement","attribute","getAttribute","processClone","children","cloneChildrenInOrder","parent","childClone","embedFonts","inlineImages","bgcolor","backgroundColor","keys","property","XMLSerializer","serializeToString","xhtml","foreignObject","svg","makeSvgDataUri","domNode","ctx","fillStyle","fillRect","newCanvas","drawImage","styleNode","useState","useRef","colorMap","getBoundary","v","res","connect","component","isMobile","h","w","btn","art","blocksKey","setBlocksKey","key","Array","from","animationDelay","gridColumn","gridRow","generateBlocks","onClick","current","base64","downloadImg","mapStateToProps","state","common","contentHeight","contentWidth"],"mappings":"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","file":"js/11.2e8a79b04bd4e12dedb5.bundle.js","sourcesContent":["'use strict';\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  \n  var _DownloadOutlined = _interopRequireDefault(require('./lib/icons/DownloadOutlined'));\n  \n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n  \n  var _default = _DownloadOutlined;\n  exports.default = _default;\n  module.exports = _default;","'use strict';\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  \n  var _RedoOutlined = _interopRequireDefault(require('./lib/icons/RedoOutlined'));\n  \n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n  \n  var _default = _RedoOutlined;\n  exports.default = _default;\n  module.exports = _default;","// export what you need\nexport { default as HomeOutline } from '@ant-design/icons/HomeOutlined'\nexport { default as ProfileOutline } from '@ant-design/icons/ProfileOutlined'\nexport { default as CameraOutline } from '@ant-design/icons/CameraOutlined'\nexport { default as ToolOutline } from '@ant-design/icons/ToolOutlined'\nexport { default as PieChartOutline } from '@ant-design/icons/PieChartOutlined'\nexport { default as BarsOutline } from '@ant-design/icons/BarsOutlined'\nexport { default as DownloadOutline } from '@ant-design/icons/DownloadOutlined'\nexport { default as RedoOutline } from '@ant-design/icons/RedoOutlined'\nexport { default as LeftOutline } from '@ant-design/icons/LeftOutlined'\nexport { default as RightOutline } from '@ant-design/icons/RightOutlined'\n\n// export what antd other components need\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownloadOutlined = _interopRequireDefault(require(\"@ant-design/icons-svg/lib/asn/DownloadOutlined\"));\n\nvar _AntdIcon = _interopRequireDefault(require(\"../components/AntdIcon\"));\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nvar DownloadOutlined = function DownloadOutlined(props, ref) {\n  return React.createElement(_AntdIcon.default, Object.assign({}, props, {\n    ref: ref,\n    icon: _DownloadOutlined.default\n  }));\n};\n\nDownloadOutlined.displayName = 'DownloadOutlined';\n\nvar _default = React.forwardRef(DownloadOutlined);\n\nexports.default = _default;","\"use strict\";\n// This icon file is generated automatically.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DownloadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.7 661a8 8 0 0012.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9h-74.1V168c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v338.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.8zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"download\", \"theme\": \"outlined\" };\nexports.default = DownloadOutlined;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _RedoOutlined = _interopRequireDefault(require(\"@ant-design/icons-svg/lib/asn/RedoOutlined\"));\n\nvar _AntdIcon = _interopRequireDefault(require(\"../components/AntdIcon\"));\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return React.createElement(_AntdIcon.default, Object.assign({}, props, {\n    ref: ref,\n    icon: _RedoOutlined.default\n  }));\n};\n\nRedoOutlined.displayName = 'RedoOutlined';\n\nvar _default = React.forwardRef(RedoOutlined);\n\nexports.default = _default;","\"use strict\";\n// This icon file is generated automatically.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexports.default = RedoOutlined;\n","(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof module !== 'undefined')\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n","import React from 'react'\nimport Utils from '@utils'\nimport domtoimage from 'dom-to-image'\nimport { Button } from 'antd'\nimport { DownloadOutline, RedoOutline } from '@constant/icons'\nimport './index.less'\n\nconst { useState, useRef } = React\n\nconst colorMap = [\n  'rgb(248, 217, 45)',\n  'rgb(248, 217, 45)',\n  'rgb(242, 245, 241)',\n  'rgb(11, 84, 164)',\n  'rgb(214, 0, 20)',\n  'rgb(11, 84, 164)'\n]\n\nconst generateBlocks = isMobile =>\n  Array.from(Array(isMobile ? 20 : 50).keys()).map(i => (\n    <div\n      key={i}\n      className={`block-${i}`}\n      style={{\n        animationDelay: `${i * 0.05}s`,\n        gridColumn: `span ${Utils.random(1, isMobile ? 4 : 5)}`,\n        gridRow: `span ${Utils.random(1, isMobile ? 4 : 5)}`,\n        backgroundColor: colorMap[Utils.random(0, 5)]\n      }}\n    />\n  ))\n\nconst getBoundary = v => {\n  let res = 10\n  while (v - res > 120) {\n    res += 60\n  }\n  return res\n}\n\nconst MondrianArt = ({ isMobile, h, w }) => {\n  const height = isMobile ? 430 : getBoundary(h)\n  const width = isMobile ? 250 : getBoundary(w)\n  const btn = isMobile ? 'mobile' : 'pc'\n\n  const art = useRef(null)\n  const [blocksKey, setBlocksKey] = useState(1)\n\n  const refresh = () => {\n    setBlocksKey(blocksKey ? 0 : 1)\n  }\n\n  const toPicture = () => {\n    domtoimage.toPng(art.current).then(base64 => {\n      Utils.downloadImg(base64, 'MondrianArt')\n    })\n  }\n\n  return (\n    <div className=\"mondrian-wrapper\">\n      <div className=\"mondrian-inner-wrapper\" ref={art}>\n        <div key={blocksKey} className=\"mondrian-art\" style={{ height, width }}>\n          {generateBlocks(isMobile)}\n        </div>\n      </div>\n      <Button\n        className={`download-btn ${btn}`}\n        icon={<DownloadOutline />}\n        type=\"primary\"\n        onClick={toPicture}\n      />\n      <Button\n        className={`refresh-btn ${btn}`}\n        icon={<RedoOutline />}\n        type=\"primary\"\n        onClick={refresh}\n      />\n    </div>\n  )\n}\n\nexport default Utils.connect({\n  component: MondrianArt,\n  mapStateToProps: state => ({\n    isMobile: state.common.isMobile,\n    h: state.common.contentHeight,\n    w: state.common.contentWidth\n  })\n})\n"],"sourceRoot":""}