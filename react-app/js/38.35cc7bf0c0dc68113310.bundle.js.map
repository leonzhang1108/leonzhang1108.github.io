{"version":3,"sources":["webpack:///./src/pages/MusicVisualizer/floating-title.tsx"],"names":["props","doInterval","interval","setInterval","intervalContent","state","onOff","offsetWidth","setState","offset","clearInterval","width","wrapperWidth","componentDidMount","this","wrapper","componentWillUnmount","componentDidUpdate","dom","render","musicName","className","ref","style","transform","Component"],"mappings":"kcAaA,cAKE,WAAYA,GAAZ,MACE,YAAMA,IAAM,K,OAgCd,EAAAC,WAAa,WACX,EAAKC,SAAWC,aAAY,WAC1B,EAAKC,oBACJ,MAGL,EAAAA,gBAAkB,WACV,MAAyB,EAAKC,MAA5BC,EAAK,QAAEC,EAAW,cAC1B,EAAKC,SAAS,CACZF,OAAQA,EACRG,OAAQH,EAAQ,EAAIC,KAIxB,EAAAG,cAAgB,WACV,EAAKR,UACPQ,cAAc,EAAKR,WA/CrB,EAAKG,MAAQ,CACXM,MAAO,EACPF,OAAQ,EACRH,OAAO,EACPC,YAAa,EACbK,aAAc,G,EAqEpB,OAjF4B,OAgB1B,YAAAC,kBAAA,WACEC,KAAKN,SAAS,CAAEI,aAAcE,KAAKC,QAAQR,cAC3CO,KAAKb,cAGP,YAAAe,qBAAA,WACEF,KAAKJ,iBAGP,YAAAO,mBAAA,WACU,IAAAN,EAAUG,KAAKT,MAAK,MAC5B,GAAIS,KAAKI,IAAIX,cAAgBI,EAAO,CAClC,IAAIJ,EAAcO,KAAKC,QAAQR,YAAcO,KAAKI,IAAIX,YACtDA,EAAcA,GAAe,EAAIA,EAAc,EAC/CO,KAAKN,SAAS,CACZG,MAAOG,KAAKI,IAAIX,YAChBA,YAAW,EACXD,OAAO,MAyBb,YAAAa,OAAA,sBACUC,EAAcN,KAAKd,MAAK,UAC1B,EAA0Bc,KAAKT,MAA7BI,EAAM,SAAEF,EAAW,cAE3B,OACE,yBACEc,UAAW,eAA8B,IAAhBd,EAAoB,OAAS,IACtDe,IAAK,SAAAA,GACH,EAAKP,QAAUO,IAGjB,yBACEC,MAAO,CAAEC,UAAW,cAAcf,EAAM,OACxCY,UAAU,UACVC,IAAK,SAAAA,GACH,EAAKJ,IAAMI,IAGZF,KAKX,EAjFA,CAA4B,IAAMK,WAkFnB","file":"js/38.35cc7bf0c0dc68113310.bundle.js","sourcesContent":["import React from 'react'\ninterface IProps {\n  musicName: string;\n}\n\ninterface IState {\n  wrapperWidth: number;\n  width: number;\n  offset: number;\n  onOff: boolean;\n  offsetWidth: number;\n}\n\nclass FloatingTitle extends React.Component<IProps, IState> {\n  dom\n  wrapper\n  interval\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      width: 0,\n      offset: 0,\n      onOff: false,\n      offsetWidth: 0,\n      wrapperWidth: 0\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ wrapperWidth: this.wrapper.offsetWidth })\n    this.doInterval()\n  }\n\n  componentWillUnmount() {\n    this.clearInterval()\n  }\n\n  componentDidUpdate() {\n    const { width } = this.state\n    if (this.dom.offsetWidth !== width) {\n      let offsetWidth = this.wrapper.offsetWidth - this.dom.offsetWidth\n      offsetWidth = offsetWidth <= 0 ? offsetWidth : 0\n      this.setState({\n        width: this.dom.offsetWidth,\n        offsetWidth,\n        onOff: false\n      })\n    }\n  }\n\n  doInterval = () => {\n    this.interval = setInterval(() => {\n      this.intervalContent()\n    }, 3000)\n  }\n\n  intervalContent = () => {\n    const { onOff, offsetWidth } = this.state\n    this.setState({\n      onOff: !onOff,\n      offset: onOff ? 0 : offsetWidth\n    })\n  }\n\n  clearInterval = () => {\n    if (this.interval) {\n      clearInterval(this.interval)\n    }\n  }\n\n  render() {\n    const { musicName } = this.props\n    const { offset, offsetWidth } = this.state\n\n    return (\n      <div\n        className={`music-name ${offsetWidth === 0 ? 'flex' : ''}`}\n        ref={ref => {\n          this.wrapper = ref\n        }}\n      >\n        <div\n          style={{ transform: `translateX(${offset}px)` }}\n          className=\"content\"\n          ref={ref => {\n            this.dom = ref\n          }}\n        >\n          {musicName}\n        </div>\n      </div>\n    )\n  }\n}\nexport default FloatingTitle\n"],"sourceRoot":""}